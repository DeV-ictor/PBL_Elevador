|system
clk => clk.IN2
reset => not_reset.IN5
Up => Up.IN1
Down => Down.IN1
A_e => A_e.IN1
B_e => B_e.IN1
C_e => C_e.IN1
A_i => A_i.IN1
B_i => B_i.IN1
C_i => C_i.IN1
A <= Display:display_inst.A
B <= Display:display_inst.B
C <= Display:display_inst.C
D <= Display:display_inst.D
E <= Display:display_inst.E
F <= Display:display_inst.F
G <= Display:display_inst.G
P <= Display:display_inst.P
DIG1 <= Display:display_inst.DIG1
DIG2 <= Display:display_inst.DIG2
DIG3 <= Display:display_inst.DIG3
DIG4 <= Display:display_inst.DIG4
alarme <= alarm.DB_MAX_OUTPUT_PORT_TYPE
door_o <= door_state.DB_MAX_OUTPUT_PORT_TYPE
door_c <= door_state.DB_MAX_OUTPUT_PORT_TYPE
LEDS[0] <= mef_elevator:mef_e_inst.Engine
LEDS[1] <= <GND>
LEDS[2] <= <GND>
LEDS[3] <= <GND>
LEDS[4] <= <GND>
LEDS[5] <= mef_elevator:mef_e_inst.Engine
LEDS[6] <= <GND>
LEDS[7] <= <GND>
LEDS[8] <= <GND>
LEDS[9] <= <GND>


|system|clkdivider1:clk_inst1
clk => clk_div_1~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => clk_div_1~reg0.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
clk_div_1 <= clk_div_1~reg0.DB_MAX_OUTPUT_PORT_TYPE


|system|clkdivider96:clk_inst3
clk => clk_div_96~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => clk_div_96~reg0.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
clk_div_96 <= clk_div_96~reg0.DB_MAX_OUTPUT_PORT_TYPE


|system|mef_people:mef_p_inst
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
reset => state[0].ACLR
reset => state[1].ACLR
reset => state[2].ACLR
up => next_state[2].OUTPUTSELECT
up => next_state[1].OUTPUTSELECT
up => next_state[0].OUTPUTSELECT
down => next_state.OUTPUTSELECT
down => next_state.OUTPUTSELECT
down => next_state.OUTPUTSELECT
P => Mux2.IN5
P => Mux1.IN7
P => Mux2.IN6
P => Mux2.IN7
P => Mux5.IN4
P => Mux4.IN6
P => Mux5.IN5
P => Mux3.IN7
P => Mux5.IN6
P => Mux4.IN7
P => Mux5.IN7
P => Mux0.IN7
P => Mux4.IN5
P => Mux5.IN1
P => Mux1.IN5
P => Mux1.IN6
P => Mux5.IN2
P => Mux5.IN3
P => Mux2.IN1
P => Mux2.IN2
P => Mux2.IN3
P => Mux2.IN4
alarm <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE


|system|door_var:door_calls_inst
B0 => var.IN0
B0 => var.IN0
B0 => var.IN0
B1 => var.IN1
B1 => var.IN0
B1 => var.IN1
E0 => var.IN1
E0 => var.IN1
E0 => var.IN1
E1 => var.IN1
E1 => var.IN1
E1 => var.IN1
var <= var.DB_MAX_OUTPUT_PORT_TYPE


|system|mef_door:mef_d_inst
clk => state.CLK
reset => state.ACLR
alarm => nextstate.DATAB
calls => nextstate.OUTPUTSELECT
door <= state.DB_MAX_OUTPUT_PORT_TYPE


|system|decoder_3callsto2:decoder_calls_inst
A_e => A.IN0
B_e => B.IN0
C_e => C.IN0
A_i => A.IN1
B_i => B.IN1
C_i => C.IN1
B0 <= B0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1.DB_MAX_OUTPUT_PORT_TYPE


|system|mef_elevator:mef_e_inst
clk => estado_atual[0].CLK
clk => estado_atual[1].CLK
reset => estado_atual[0].ACLR
reset => estado_atual[1].ACLR
P => Engine.IN0
P => Engine.IN0
P => estado_atual[1].ENA
P => estado_atual[0].ENA
B0 => always1.IN0
B0 => Engine.IN1
B0 => always1.IN0
B0 => always1.IN0
B0 => Engine.IN1
B1 => always1.IN1
B1 => always1.IN1
B1 => always1.IN1
B1 => Engine.IN1
B1 => Engine.IN1
EA[0] <= estado_atual[0].DB_MAX_OUTPUT_PORT_TYPE
EA[1] <= estado_atual[1].DB_MAX_OUTPUT_PORT_TYPE
Engine[0] <= Engine.DB_MAX_OUTPUT_PORT_TYPE
Engine[1] <= Engine.DB_MAX_OUTPUT_PORT_TYPE


|system|Display:display_inst
clk96 => clk96.IN1
A_P => A_P.IN1
B_P => B_P.IN1
C_P => C_P.IN1
A_A => A_A.IN1
B_A => B_A.IN1
A <= mux_2x1_lvl_ppl:inst_mux.A
B <= mux_2x1_lvl_ppl:inst_mux.B
C <= mux_2x1_lvl_ppl:inst_mux.C
D <= mux_2x1_lvl_ppl:inst_mux.D
E <= mux_2x1_lvl_ppl:inst_mux.E
F <= mux_2x1_lvl_ppl:inst_mux.F
G <= mux_2x1_lvl_ppl:inst_mux.G
P <= <VCC>
DIG1 <= clk96.DB_MAX_OUTPUT_PORT_TYPE
DIG2 <= <VCC>
DIG3 <= <VCC>
DIG4 <= clk96.DB_MAX_OUTPUT_PORT_TYPE


|system|Display:display_inst|mux_2x1_lvl_ppl:inst_mux
sel => and_gate7.IN1
sel => and_gate8.IN1
sel => and_gate9.IN1
sel => and_gate10.IN1
sel => and_gate11.IN1
sel => and_gate12.IN1
sel => and_gate13.IN1
sel => and_gate0.IN1
sel => and_gate1.IN1
sel => and_gate2.IN1
sel => and_gate3.IN1
sel => and_gate4.IN1
sel => and_gate5.IN1
sel => and_gate6.IN1
A_P => A_P.IN1
B_P => B_P.IN1
C_P => C_P.IN1
A_A => A_A.IN1
B_A => B_A.IN1
A <= or_gate0.DB_MAX_OUTPUT_PORT_TYPE
B <= or_gate1.DB_MAX_OUTPUT_PORT_TYPE
C <= or_gate2.DB_MAX_OUTPUT_PORT_TYPE
D <= or_gate3.DB_MAX_OUTPUT_PORT_TYPE
E <= or_gate4.DB_MAX_OUTPUT_PORT_TYPE
F <= or_gate5.DB_MAX_OUTPUT_PORT_TYPE
G <= or_gate6.DB_MAX_OUTPUT_PORT_TYPE


|system|Display:display_inst|mux_2x1_lvl_ppl:inst_mux|decoder_3to7seg:decoder_inst
binary_in[0] => Decoder0.IN2
binary_in[1] => Decoder0.IN1
binary_in[2] => Decoder0.IN0
seg[0] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|system|Display:display_inst|mux_2x1_lvl_ppl:inst_mux|decoder_2to7seg:decoder2_inst
binary_in[0] => Decoder0.IN1
binary_in[1] => Decoder0.IN0
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= <VCC>
seg[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= <GND>
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


